{"version":3,"sources":["Components/Chat.jsx","Components/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","Chat","state","name","message","messages","myRef","React","createRef","onMessageChange","e","setState","target","value","onNameChange","onMessageSubmit","preventDefault","emit","executeScroll","messagesEnd","scrollIntoView","onopen","console","log","on","date","this","map","index","className","ref","el","onSubmit","onChange","label","placeholder","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGMA,EAASC,IAAG,wDAAyD,CACvEC,KAAM,aA4FKC,E,4MAvFXC,MAAQ,CACJC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,MAAOC,IAAMC,a,EAgBjBC,gBAAkB,SAAAC,GACd,EAAKC,SAAS,CAAEP,QAASM,EAAEE,OAAOC,S,EAGtCC,aAAe,SAAAJ,GACX,EAAKC,SAAS,CAAER,KAAMO,EAAEE,OAAOC,S,EAGnCE,gBAAkB,SAAAL,GACdA,EAAEM,iBACF,IAAMb,EAAO,EAAKD,MAAMC,KAClBC,EAAU,EAAKF,MAAME,QAC3BN,EAAOmB,KAAK,OAAQ,CAAEd,OAAMC,YAC5B,EAAKO,SAAS,CAACP,QAAS,KACxB,EAAKc,iB,EAGTA,cAAgB,WACZ,EAAKC,YAAYC,kB,uDA/BrB,WAAqB,IAAD,OAChBtB,EAAOuB,OAAS,WACdC,QAAQC,IAAI,+BAEdzB,EAAO0B,GAAG,QAAQ,YAA4B,IAA1BrB,EAAyB,EAAzBA,KAAYC,GAAa,EAAnBqB,KAAmB,EAAbrB,SAC5BkB,QAAQC,IAAIpB,EAAMC,GAClB,EAAKO,SAAS,CAACN,SAAS,GAAD,mBAAO,EAAKH,MAAMG,UAAlB,CAA4B,CAACF,OAAMC,oB,gCAGlE,WACIsB,KAAKR,kB,oBAyBT,WAAS,IAAD,OAEEb,EAAWqB,KAAKxB,MAAMG,SAASsB,KAAI,WAAkBC,GAAW,IAA3BzB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAC7C,OACQ,6BACI,8BAAID,EAAJ,KAAYC,MADPwB,MAMrB,OACI,gCACI,sCACA,sBAAKC,UAAU,WAAf,UACKxB,EACD,qBAAKyB,IAAK,SAACC,GAAQ,EAAKZ,YAAcY,QAEtC,uBAAMC,SAAUN,KAAKX,gBAAiBc,UAAU,eAAhD,UACI,sBAAKA,UAAU,OAAf,UACI,0CACA,uBACI1B,KAAK,OACL8B,SAAU,SAACvB,GAAD,OAAO,EAAKI,aAAaJ,IACnCG,MAAOa,KAAKxB,MAAMC,KAClB+B,MAAM,OACNC,YAAY,4BAGpB,sBAAKN,UAAU,OAAf,UACI,0CACA,uBACI1B,KAAK,UACL8B,SAAU,SAACvB,GAAD,OAAO,EAAKD,gBAAgBC,IACtCG,MAAOa,KAAKxB,MAAME,QAClB8B,MAAM,UACNC,YAAY,6BAGpB,sD,GAlFLC,aCLDA,YCcHC,MAVf,WACE,OACE,qBAAKR,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACA,cAAC,EAAD,SCEOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aadc68f5.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport io from 'socket.io-client'\n\nconst socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path: '/flights'\n});\n\nclass Chat extends Component{\n\n    state = {\n        name: \"\",\n        message: \"\",\n        messages: [],\n        myRef: React.createRef()\n    };\n\n    componentDidMount() {\n        socket.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        socket.on(\"CHAT\", ({name, date, message}) => {\n            console.log(name, message)\n            this.setState({messages: [ ...this.state.messages, {name, message}]})\n        });\n      }\n    componentDidUpdate() {\n        this.executeScroll();\n      }\n\n    onMessageChange = e => {\n        this.setState({ message: e.target.value})\n    }\n\n    onNameChange = e => {\n        this.setState({ name: e.target.value})\n    }\n\n    onMessageSubmit = e => {\n        e.preventDefault()\n        const name = this.state.name\n        const message = this.state.message\n        socket.emit('CHAT', { name, message })\n        this.setState({message: \"\"})\n        this.executeScroll()\n    }\n\n    executeScroll = () => {\n        this.messagesEnd.scrollIntoView()\n    }\n    \n\n    render(){\n\n        const messages = this.state.messages.map(({name, message}, index) => {\n            return (\n                    <h3 key={index}>\n                        <b>{name}: {message}</b>\n                    </h3>\n            )\n        });\n\n        return(\n            <div>\n                <h1>Chat</h1>\n                <div className=\"messages\">\n                    {messages}\n                    <div ref={(el) => {this.messagesEnd = el; }}></div> \n                </div>\n                    <form onSubmit={this.onMessageSubmit} className=\"send-message\">\n                        <div className=\"flex\">\n                            <h2>Nombre: </h2>\n                            <input\n                                name=\"name\"\n                                onChange={(e) => this.onNameChange(e)}\n                                value={this.state.name}\n                                label=\"name\"\n                                placeholder='Escribe tu nombre...'\n                            />\n                        </div>\n                        <div className=\"flex\">\n                            <h2>Mensaje:</h2>\n                            <input\n                                name=\"message\"\n                                onChange={(e) => this.onMessageChange(e)}\n                                value={this.state.message}\n                                label=\"Message\"\n                                placeholder='Escribe un mensaje...'\n                            />\n                        </div>\n                        <button>Enviar</button>\n                    </form>\n            </div>\n          )\n    }\n}\n\nexport default Chat;","import React, {Component} from 'react'\n\nclass Map extends Component{\n\n    render(){\n\n        let receta = {\n            nombre: 'Pizza',\n            ingredientes: ['Tomate', 'Queso'],\n            calorias: 400\n        };\n\n        return (\n            <div>\n                <h1>{'Receta:' + receta.nombre}</h1>\n                <h2>{'Calorias:' + receta.calorias}</h2>\n                {\n                    receta.ingredientes.map((ingrediente, i) => {\n                        return (\n                            <li key={i}>\n                                {ingrediente}\n                            </li>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default Map;\n\n","import React from 'react'\nimport './App.css';\nimport './css/chat.css'\nimport Chat from './Components/Chat'\nimport Map from './Components/Map'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"chat-box\">\n        <Chat />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}